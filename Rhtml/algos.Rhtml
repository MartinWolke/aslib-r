<!DOCTYPE html>
<html>
<head>
  <title>Algorithm performance overview</title>
</head>
<body>


<h2> Overview of performance values </h2>

The following statistics were calculated from the performance values of each algorithm:
<ul>

  <li> <a>obs (number of observations within performance values)</a>
  <li> <a>NAs (number of NAs, i.e., missing values, within performance values)</a>
  <li> <a>run_ok (percentage of performance values without a crash)</a>
  <li> <a>min (minimum), mean (arithmetic mean), max (maximum), std_dev (standard deviation)</a>
  <li> <a>1st_qu (1st quartile = lower quartile = 25%-quantile)</a>
  <li> <a>median (median = 50%-quantile)</a>
  <li> <a>3rd_qu (3rd quartile = upper quartile = 75%-quantile)</a>
  <li> <a>co_var (coefficient of variation = standard deviation / arithmetic mean)</a>

</ul>

<!--begin.rcode, results = "asis"
  res = summarizeAlgoRuns(astask)
  print(xtable(res, display = c("s", "d", "d", rep("g", 9))), "html")
end.rcode-->

<br>
<h2> Summary of the runstatus per algorithm </h2>

The following table summarizes the runstatus of each algorithm over all instances (in %).<br>
<br>

<!--begin.rcode, results = "asis"
  res = summarizeAlgoRunstatus(astask)
  print(xtable(res, digits = 3), "html")
end.rcode-->

<br>
<h2> Dominated Algorithms </h2>

Here, you'll find an overview of dominating/dominated algorithms: <br>

<!--begin.rcode, results = "asis"
  res = findDominatedAlgos(astask, reduce = TRUE, type = "character")
  if (nrow(res) != 0) {
    print(xtable(res), include.rownames = TRUE, "html")
  } else {
    cat("None of the algorithms was superior to any of the other.")
  }  
end.rcode-->

<br> <br>
An algorithm (A) is considered to be superior to an other algorithm (B), if it has at least an equal performance on all instances (compared to B) <u>and</u> if it is better on at least one of them. A missing value is automatically a worse performance. However, instances which could not be solved by either one of the algorithms, were not considered for the dominance relation.<br>

<br>
<br>

<b><FONT COLOR = "#FF0000"> Important note w.r.t. the following plots:</b><br>
Depending on the configuration, missing values among the algorithms' performance values
were imputed prior to the creation of the following plots.<br>
Missing values were imputed to max + 0.3 * (max - min), in case of minimization problems, 
or min - 0.3 * (max - min), in case of maximization problems.<br>
In addition, a small noise is added to the imputed values (except for the cluster matrix,
based on correlations, which is shown at the end of this page). </FONT>
<br>
<br>

<h2> Boxplots of performance values </h2>

<br>

<!--begin.rcode
  plotAlgoPerfBoxplots(astask, log = config$algo.perf.boxplots.log)
end.rcode-->

<br>
<h2> Estimated densitities of performance values </h2>

<br>

<!--begin.rcode
  plotAlgoPerfDensities(astask, log = config$algo.perf.densities.log) 
end.rcode-->

<br>
<h2> Estimated cumulative distribution functions of performance values </h2>

<br>

<!--begin.rcode
  plotAlgoPerfProbability(astask, log = config$algo.perf.probabilities.log) 
end.rcode-->

<br>
<h2> Scatterplot matrix of the performance values </h2>

The following figure creates pairwise scatterplots of the (possibly transformed) 
performance values, including a regression line (cf. upper panel), a histogram 
of each performance value (cf. diagonal), as well as the pairwise (pearson) 
correlation (cf. lower panel).<br>
In order to facilitate the lucidity of the correlations, they are colored
depending on their value. Thus, a high positive correlation (&ge; 0.8) is
colored green, light correlations (between 0.3 and 0.8, or -0.8 and -0.3)
are orange, little to no correlations (&ge; -0.3 and &le; 0.3) are written
in black and high negative correlations (&le; -0.8) are shown red.<br>
Eventually, the performance values are transformed, based on the settings
within its config-file. The corresponding transformation is mentioned
within the subtitle underneath the figure.

<!--begin.rcode, results = "asis"
  plotAlgoScattermatrix(astask, trafo = config$algo.perf.scatter.trafo)
end.rcode-->


<br>
<h2> Clustering algorithms based on their correlations </h2>
The following figure shows the correlations of the <b>ranks</b> of the performance 
values. Per default it will show the correlation coefficient of spearman. Missing values
were imputed prior to computing the correlation coefficients. <br>
In addition, the algorithms are ordered in a way that similar (highly
correlated) algorithms are close to each other. Per default the clustering
is based on hierarchical clustering, using Ward's method. <br>
<br>

<!--begin.rcode
  plotAlgoCorMatrix(astask) 
end.rcode-->


</body>
</html>
